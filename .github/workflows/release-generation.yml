name: Build and Store Mod in Release Generation

on:
  push:
    tags:
      - '*.*.*'  # Triggered by tags like v1.0.0, v1.1.0, etc.

jobs:
  Setup:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the code
      uses: actions/checkout@v2  # Checkout repository to ensure all files are available

    - name: Setup Java JDK
      uses: actions/setup-java@v4.7.0
      with:
        java-version: 17
        distribution: 'zulu'
        java-package: 'jdk'
        architecture: 'x64'
        check-latest: true

    - name: Make gradlew executable
      run: chmod +x gradlew  # Ensure gradlew is executable

    - name: Upload full project directory as artifact
      uses: actions/upload-artifact@v4.6.2
      with:
        name: full-project
        path: |
          path: |
          **/*

  Build:
    runs-on: ubuntu-latest
    needs: Setup  # Ensure this job runs after Setup

    steps:
    - name: Download full project artifact
      uses: actions/download-artifact@v4.2.1
      with:
        name: full-project

    - name: Make gradlew executable
      run: chmod +x gradlew  # Ensure gradlew is executable

    - name: Build the mod
      run: |
        ./gradlew build  # Build using the gradle wrapper
        echo "Mod built"

  Store-and-release:
    runs-on: ubuntu-latest
    needs: Build  # Ensure this job runs after Build

    steps:
    - name: Download full project artifact
      uses: actions/download-artifact@v4.2.1
      with:
        name: full-project

    - name: Store the mod in releases/curr/gsm.jar
      run: |
        mkdir -p releases/curr
        LATEST_MOD=$(ls build/libs/modid-*.jar | sort -V | tail -n 1)
        cp "$LATEST_MOD" releases/curr/gsm.jar

    - name: Get the version tag dynamically
      id: get_version
      run: |
        VERSION=$(git describe --tags --abbrev=0)  # Get the most recent tag
        echo "version=$VERSION" >> $GITHUB_ENV  # Set the version as an environment variable
    
    - name: Create a GitHub release
      run: |
        gh release create ${{ env.version }} releases/curr/gsm.jar --title "Release ${{ env.version }}" --notes "Release notes for ${{ env.version }} go here."
      env:
        GH_TOKEN: ${{ secrets.GIT_TOKEN }}
