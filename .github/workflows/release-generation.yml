name: Build and Store Mod in Release Generation

on:
  push:
    tags:
      - '*.*.*'  # Triggered by tags like v1.0.0, v1.1.0, etc.

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the code
      uses: actions/checkout@v2

    - name: Setup Java JDK
      uses: actions/setup-java@v4.7.0
      with:
        java-version: 17  # Specify the version of Java (17 in your case)
        distribution: 'zulu'  # Specify the distribution, e.g., AdoptOpenJDK or zulu
        java-package: 'jdk'  # You can specify 'jdk' to get the full JDK package, or 'jre' if you want just the JRE
        architecture: 'x64'  # Specify the architecture, default is x64
        check-latest: true  # Optionally, check for the latest available version if you want


    - name: Build the mod
      run: |
        # Assuming you are using a build tool like Gradle or Maven
        # Replace with the actual build command for your project
        ./gradlew build  # Replace this with your build command if different
        echo "Mod built"

    - name: Store the mod in releases/curr/gsm.jar
      run: |
        mkdir -p releases/curr
        LATEST_MOD=$(ls build/libs/modid-*.jar | sort -V | tail -n 1)
        cp "$LATEST_MOD" releases/curr/gsm.jar


    - name: Create a GitHub release
      run: |
        # Creates a GitHub release with the tag and adds the mod file to it
        git tag -a v1.0.0 -m "Your release message"  # Replace with the correct tag
        git push origin v1.0.0  # Pushes the tag to GitHub
        gh release create v1.0.0 releases/curr/gsm.jar  # Creates a release with the mod file
